server:
  port: 8080
  
spring:
  application:
    name: SpringBoot3.2.0
  profiles:
    active: dev
    default: dev
  datasource:
    # ======== HikariCP连接池配置 ========
    hikari:
      # 连接池名称，可选
      pool-name: SpringHikariCP
      # 是否自动提交事务
      auto-commit: true
      # 连接超时时间，单位为毫秒， 缺省:30秒，即30000
      connection-timeout: 10000
      # 连接池中连接的最大空闲时间，超过此时间将被释放，单位为毫秒，缺省:10分钟，即600000
      idle-timeout: 30000
      # 连接池中连接的最大存活时间，单位为毫秒，缺省:0 禁用
      keepalive-time: 0
      # 连接的最大生命周期，单位为毫秒，缺省:1800000 即30分钟
      max-lifetime: 1800000
      # 连接测试查询语句
      connection-test-query: SELECT 1
      # 连接池的最小空闲连接数，默认值: 与maximumPoolSize相同
      minimum-idle: 5
      # 连接池的最大连接数。默认值: 10
      maximum-pool-size: 10
      # 连接池初始化超时时间。默认值: 1
      initialization-fail-timeout: 1
      # 是否隔离内部查询，此属性仅在 autoCommit 被禁用时适用。默认值: false
      isolate-internal-queries: false
      # 是否允许暂停连接池。默认值: false
      allow-pool-suspension: false
      # 是否设置为只读。默认值: false
      readOnly: false
      # 是否注册MBeans。默认值: false
      register-mbeans: false
      # 连接初始化 SQL
      connection-init-sql: "SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci;"

# ======== MybatisPlus配置 ========
mybatis-plus:
  # 搜索指定包别名
  type-aliases-package: com.yiyan.boot3.model.po
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapper-locations: classpath:mapper/**/*xml
  # 配置驼峰
  configuration:
    # 是否开启自动驼峰命名规则（camel case）映射。默认值：true
    map-underscore-to-camel-case: true
    # 开启 Mybatis 二级缓存，默认为 true。
    cache-enabled: true
    # 日志输出实现。StdOutImpl 标准日志控制台输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      # 全局默认主键类型
      id-type: assign_id
      # 表名是否使用驼峰转下划线命名,只对表名生效。 默认true
      table-underline: true

# ======== Spring Boot Actuator 配置 ========
management:
  endpoints:
    web:
      exposure:
        include: prometheus  # 打开 Prometheus 的 Web 访问 Path
  metrics:
    # 下面选项建议打开，以监控 http 请求的 P99/P95 等，具体的时间分布可以根据实际情况设置
    distribution:
      sla:
        http:
          server:
            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s
    # 在 Prometheus 中添加特别的 Labels
    tags:
      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控
      application: ${spring.application.name}

# ======== Security 配置 ========
security:
  # 静态资源
  staticWhitelist:
    - /swagger-ui/**
    - /swagger-resources/**
    - /v2/**
    - /v3/**
    - /webjars/**
    - /doc.html
    - /error
    - /favicon.ico
    - /**.html
    - /**.css
    - /**.js
    - /**.gif
    - /**.ico
    - "/actuator/**"
  # 接口信息
  apiWhitelist:
    - "/user/register"
    - "/user/login"

# ======== SpringDocs文档配置 ========
springdocs:
  title: SpringBoot3.2.0 API Docs
  description: SpringBoot3 + OpenAPI Docs
  version: 0.0.1
  scheme: Bearer